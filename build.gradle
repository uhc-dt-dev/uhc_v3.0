plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.uhc.station'
version = '0.0.1'
description = 'station project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'src/main/generated/querydsl']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools:3.4.0'
	
	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'
	
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	// Querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation 'com.querydsl:querydsl-sql:5.0.0'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

// QueryDsl 디렉토리 경로
def querydslSrcDir = 'src/main/generated/querydsl'

clean {
	delete file(querydslSrcDir)
}

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

// 테스트 코드를 제외한 빌드 수행
tasks.withType(Test) {
    enabled = false
}

tasks.named('test') {
	useJUnitPlatform()
}
